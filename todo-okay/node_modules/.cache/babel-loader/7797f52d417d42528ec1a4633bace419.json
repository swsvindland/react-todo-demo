{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/svindland/Development/youtube-todo/todo-okay/src/contexts/ApiContext.tsx\";\nimport { createContext } from 'react';\nimport axios from 'axios';\nexport const ApiContext = /*#__PURE__*/createContext({});\nexport const ApiProvider = ({\n  children\n}) => {\n  const getTodoData = async () => {\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const addTodoItem = async text => {\n    try {\n      const body = {\n        userId: 1,\n        title: text,\n        completed: false\n      };\n      return await axios.post('https://jsonplaceholder.typicode.com/todos', body);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const api = {\n    getTodoData,\n    addTodoItem\n  };\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: api,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_c = ApiProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"sources":["/Users/svindland/Development/youtube-todo/todo-okay/src/contexts/ApiContext.tsx"],"names":["createContext","axios","ApiContext","ApiProvider","children","getTodoData","response","get","data","error","console","addTodoItem","text","body","userId","title","completed","post","api"],"mappings":";;AAAA,SAAaA,aAAb,QAAkC,OAAlC;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAOA,OAAO,MAAMC,UAAU,gBAAGF,aAAa,CAAc,EAAd,CAAhC;AAEP,OAAO,MAAMG,WAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7C,QAAMC,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CACnB,4CADmB,CAAvB;AAIA,aAAOD,QAAQ,CAACE,IAAhB;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAVD;;AAYA,QAAME,WAAW,GAAG,MAAOC,IAAP,IAAwB;AACxC,QAAI;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,MAAM,EAAE,CADC;AAETC,QAAAA,KAAK,EAAEH,IAFE;AAGTI,QAAAA,SAAS,EAAE;AAHF,OAAb;AAMA,aAAO,MAAMf,KAAK,CAACgB,IAAN,CACT,4CADS,EAETJ,IAFS,CAAb;AAIH,KAXD,CAWE,OAAOJ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAfD;;AAiBA,QAAMS,GAAgB,GAAG;AACrBb,IAAAA,WADqB;AAErBM,IAAAA;AAFqB,GAAzB;AAKA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEO,GAA5B;AAAA,cAAkCd;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CApCM;KAAMD,W","sourcesContent":["import { FC, createContext } from 'react';\n\nimport { ITodo } from '../interfaces/todo';\nimport axios from 'axios';\n\ninterface IApiContext {\n    getTodoData: () => Promise<ITodo[] | undefined>;\n    addTodoItem: (text: string) => Promise<any>;\n}\n\nexport const ApiContext = createContext<IApiContext>({} as IApiContext);\n\nexport const ApiProvider: FC = ({ children }) => {\n    const getTodoData = async () => {\n        try {\n            const response = await axios.get(\n                'https://jsonplaceholder.typicode.com/todos'\n            );\n\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const addTodoItem = async (text: string) => {\n        try {\n            const body = {\n                userId: 1,\n                title: text,\n                completed: false,\n            };\n\n            return await axios.post(\n                'https://jsonplaceholder.typicode.com/todos',\n                body\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const api: IApiContext = {\n        getTodoData,\n        addTodoItem,\n    };\n\n    return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}